ActiveLanguage              = function ActiveLanguage: String;
AddBackslash                = function AddBackslash(const S: String): String;
AddPeriod                   = function AddPeriod(const S: String): String;
AddQuotes                   = function AddQuotes(const S: String): String;
Beep                        = procedure Beep;
BringToFrontAndRestore      = procedure BringToFrontAndRestore;
BrowseForFolder             = function BrowseForFolder(const Prompt: String; var Directory: String; const NewFolderButton: Boolean): Boolean;
CallDLLProc                 = function CallDLLProc(const DLLHandle: Longint; const ProcName: String; const Param1, Param2: Longint; var Result: Longint): Boolean;
CastIntegerToString         = function CastIntegerToString(const L: Longint): String;
CastStringToInteger         = function CastStringToInteger(var S: String): Longint;
ChangeFileExt               = function ChangeFileExt(const FileName, Extension: string): String;
CharToOemBuff               = procedure CharToOemBuff(var S: String);
CheckForMutexes             = function CheckForMutexes(Mutexes: String): Boolean;
Chr                         = function Chr(B: Byte): Char;
CompareStr                  = function CompareStr(const S1, S2: string): Integer;
CompareText                 = function CompareText(const S1, S2: string): Integer;
ConvertPercentStr           = function ConvertPercentStr(var S: String): Boolean;
Copy                        = function Copy(S: String; Indx, Count: Integer): String;
CreateDir                   = function CreateDir(const Dir: string): Boolean;
CreateMutex                 = procedure CreateMutex(const Name: String);
CreateShellLink             = function CreateShellLink(const Filename, Description, ShortcutTo, Parameters, WorkingDir, IconFilename: String; const IconIndex, ShowCmd: Integer): Boolean;
DecrementSharedCount        = function DecrementSharedCount(const Filename: String): Boolean;
DelayDeleteFile             = procedure DelayDeleteFile(const Filename: String; const Tries: Integer);
Delete                      = procedure Delete(var S: String; Indx, Count: Integer);
DeleteFile                  = function DeleteFile(const FileName: string): Boolean;
DeleteIniEntry              = procedure DeleteIniEntry(const Section, Key, Filename: String);
DeleteIniSection            = procedure DeleteIniSection(const Section, Filename: String);
DelTree                     = function DelTree(const Path: String; const IsDir, DeleteFiles, DeleteSubdirsAlso: Boolean): Boolean;
DirExists                   = function DirExists(const Name: String): Boolean;
ExitSetupMsgBox             = function ExitSetupMsgBox: Boolean;
ExpandConstant              = function ExpandConstant(const S: String): String;
ExpandConstantEx            = function ExpandConstantEx(const S: String; const CustomConst, CustomValue: String): String;
ExpandFileName              = function ExpandFileName(const FileName: string): String;
ExpandUNCFileName           = function ExpandUNCFileName(const FileName: string): String;
ExtractFileDir              = function ExtractFileDir(const FileName: string): String;
ExtractFileDrive            = function ExtractFileDrive(const FileName: string): String;
ExtractFileExt              = function ExtractFileExt(const FileName: string): String;
ExtractFileName             = function ExtractFileName(const FileName: string): String;
ExtractFilePath             = function ExtractFilePath(const FileName: string): String;
ExtractRelativePath         = function ExtractRelativePath(const BaseName, DestName: String): String;
ExtractTemporaryFile        = function ExtractTemporaryFile(const FileName: String): Boolean;
FileCopy                    = function FileCopy(const ExistingFile, NewFile: String; const FailIfExists: Boolean): Boolean;
FileExists                  = function FileExists(const Name: String): Boolean;
FileOrDirExists             = function FileOrDirExists(const Name: String): Boolean;
FileSearch                  = function FileSearch(const Name, DirList: string): String;
FileSize                    = function FileSize(const Name: String; var Size: Integer): Boolean;
FindFirst                   = function FindFirst(const FileName: String): String;
FindNext                    = function FindNext: String;
FindWindowByClassName       = function FindWindowByClassName(const ClassName: String): Longint;
FindWindowByWindowName      = function FindWindowByWindowName(const WindowName: String): Longint;
ForceDirectories            = procedure ForceDirectories(Dir: string);
Format1                     = function Format1(const Format, S1: String): String;
Format2                     = function Format2(const Format, S1, S2: String): String;
Format3                     = function Format3(const Format, S1, S2, S3: String): String;
Format4                     = function Format4(const Format, S1, S2, S3, S4: String): String;
FreeDLL                     = function FreeDLL(const DLLHandle: Longint): Boolean;
GenerateUniqueName          = function GenerateUniqueName(Path: String; const Extension: String): String;
GetArrayLength              = function GetArrayLength(var Arr: Array): Longint;
GetCmdTail                  = function GetCmdTail: String;
GetComputerNameString       = function GetComputerNameString: String;
GetCurrentDir               = function GetCurrentDir: String;
GetDateString               = function GetDateString: String;
GetDateTimeString           = function GetDateTimeString: String;
GetEnv                      = function GetEnv(const EnvVar: String): String;
GetIniBool                  = function GetIniBool(const Section, Key: String; const Default: Boolean; const Filename: String): Boolean
GetIniInt                   = function GetIniInt(const Section, Key: String; const Default, Min, Max: Longint; const Filename: String): Longint;
GetIniString                = function GetIniString(const Section, Key, Default, Filename: String): String;
GetOpenFileName             = function GetOpenFileName(const Prompt: String; var FileName: String; const InitialDirectory, Filter, DefaultExtension: String): Boolean;
GetPreviousData             = function GetPreviousData(const ValueName, DefaultValueData: String): String;
GetShellFolder              = function GetShellFolder(Common: Boolean; const ID: TShellFolderID): String;
GetShortName                = function GetShortName(const LongName: String): String;
GetSpaceOnDisk              = function GetSpaceOnDisk(const DriveRoot: String; var FreeMegabytes, TotalMegabytes: Cardinal): Boolean;
GetSystemDir                = function GetSystemDir: String;
GetTempDir                  = function GetTempDir: String;
GetTimeString               = function GetTimeString: String;
GetUserNameString           = function GetUserNameString: String;
GetVersionNumbers           = function GetVersionNumbers(const Filename: String; var VersionMS, VersionLS: Cardinal): Boolean;
GetVersionNumbersString     = function GetVersionNumbersString(const Filename: String; var Version: String): Boolean;
GetWinDir                   = function GetWinDir: String;
High                        = function High(var U: Array): Longint;
IncrementSharedCount        = procedure IncrementSharedCount(const Filename: String; const AlreadyExisted: Boolean);
IniKeyExists                = function IniKeyExists(const Section, Key, Filename: String): Boolean;
InputDir                    = function InputDir(const AppendDir: String; var Value: String): Boolean;
InputFile                   = function InputFile(const Prompt, Filter, DefaultExtension: string; var Value: string): Boolean;
InputFileArray              = function InputFileArray(const Prompts, Filters, DefaultExtensions: TArrayOfString; var Values: TArrayOfString): Boolean;
InputOption                 = function InputOption(const Prompt: String; var Value: String): Boolean;
InputOptionArray            = function InputOptionArray(const Prompts: TArrayOfString; var Values: TArrayOfString; const Exclusive, ListBox: Boolean): Boolean;
InputQuery                  = function InputQuery(const Prompt: String; var Value: String): Boolean;
InputQueryArray             = function InputQueryArray(const Prompts: TArrayOfString; var Values: TArrayOfString): Boolean;
InputQueryArrayEx           = function InputQueryArrayEx(const Prompts: TArrayOfString; const PasswordChars: TArrayOfChar; var Values: TArrayOfString): Boolean;
Insert                      = procedure Insert(Source: String; var Dest: String; Indx: Integer);
InstallOnThisVersion        = function InstallOnThisVersion(const MinVersion, OnlyBelowVersion: String): Integer;
InstExec                    = function InstExec(const Filename, Params: String; WorkingDir: String; const WaitUntilTerminated, WaitUntilIdle: Boolean; const ShowCmd: Integer; var ResultCode: Integer): Boolean;
InstShellExec               = function InstShellExec(const Filename, Params: String; WorkingDir: String; const ShowCmd: Integer; var ErrorCode: Integer): Boolean;
IntToStr                    = function IntToStr(i: Longint): String;
IsAdminLoggedOn             = function IsAdminLoggedOn: Boolean;
IsIniSectionEmpty           = function IsIniSectionEmpty(const Section, Filename: String): Boolean;
IsPowerUserLoggedOn         = function IsPowerUserLoggedOn: Boolean;
Length                      = function Length(s: String): Longint;
LoadDLL                     = function LoadDLL(const DLLName: String; var ErrorCode: Integer): Longint;
LoadStringFromFile          = function LoadStringFromFile(const FileName: String; var S: String): Boolean;
LoadStringsFromFile         = function LoadStringsFromFile(const FileName: String; var S: TArrayOfString): Boolean;
Low                         = function Low(var U: Array): Longint;
Lowercase                   = function Lowercase(s: string): String;
ModifyPifFile               = function ModifyPifFile(const Filename: String; const CloseOnExit: Boolean): Boolean;
MsgBox                      = function MsgBox(const Text: String; const Typ: TMsgBoxType; const Buttons: Integer): Integer;
OemToCharBuff               = procedure OemToCharBuff(var S: String);
Ord                         = function Ord(C: Char): Byte;
OutputMsg                   = function OutputMsg(const Msg: String; const WaitUntilClick: Boolean): Boolean;
OutputMsgMemo               = function OutputMsgMemo(const Prompt, Msg: String): Boolean;
OutputProgress              = procedure OutputProgress(const Msg1, Msg2: String; const Progress, MaxProgress: Longint);
ParamCount                  = function ParamCount: Integer;
ParamStr                    = function ParamStr(Index: Integer): String;
Pos                         = function Pos(SubStr, S: String): Integer;
PostBroadcastMessage        = function PostBroadcastMessage(const Msg, WParam, LParam: Longint): Boolean;
PostMessage                 = function PostMessage(const Wnd, Msg, WParam, LParam: Longint): Boolean;
Random                      = function Random(const Range: Integer): Integer;
RegGetSubkeyNames           = function RegGetSubkeyNames(const RootKey: Integer; const SubKeyName: String; var Names: TArrayOfString): Boolean;
RegisterServer              = procedure RegisterServer(const Filename: String; const FailCriticalErrors: Boolean);
RegisterTypeLibrary         = procedure RegisterTypeLibrary(const Filename: String);
RegisterWindowMessage       = function RegisterWindowMessage(const Name: String): Longint;
RegKeyExists                = function RegKeyExists(const RootKey: Integer; const SubKeyName: String): Boolean;
RegQueryBinaryValue         = function RegQueryBinaryValue(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultStr: String): Boolean;
RegQueryDWordValue          = function RegQueryDWordValue(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultDWord: Cardinal): Boolean;
RegQueryMultiStringValue    = function RegQueryMultiStringValue(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultStr: String): Boolean;
RegQueryStringValue         = function RegQueryStringValue(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultStr: String): Boolean;
RegValueExists              = function RegValueExists(const RootKey: Integer; const SubKeyName, ValueName: String): Boolean;
RegWriteBinaryValue         = function RegWriteBinaryValue (const RootKey: Integer; const SubKeyName, ValueName, Value: String): Boolean;
RegWriteDWordValue          = function RegWriteDWordValue (const RootKey: Integer; const SubKeyName, ValueName: String; const Value: Cardinal): Boolean;
RegWriteMultiStringValue    = function RegWriteMultiStringValue (const RootKey: Integer; const SubKeyName, ValueName, Value: String): Boolean;
RegWriteStringValue         = function RegWriteStringValue (const RootKey: Integer; const SubKeyName, ValueName, Value: String): Boolean;
RemoveBackslash             = function RemoveBackslash(const S: String): String;
RemoveBackslashUnlessRoot   = function RemoveBackslashUnlessRoot(const S: String): String;
RemoveDir                   = function RemoveDir(const Dir: string): Boolean;
RemoveQuotes                = function RemoveQuotes(const S: String): String;
RenameFile                  = function RenameFile(const OldName, NewName: string): Boolean;
RestartReplace              = procedure RestartReplace(const TempFile, DestFile: String);
SaveStringsToFile           = function SaveStringsToFile(const FileName: String; const S: TArrayOfString; const Append: Boolean): Boolean;
SaveStringToFile            = function SaveStringToFile(const FileName, S: String; const Append: Boolean): Boolean;
ScriptDlgPageClearCustom    = procedure ScriptDlgPageClearCustom();
ScriptDlgPageClose          = procedure ScriptDlgPageClose(const FullRestore: Boolean);
ScriptDlgPageOpen           = procedure ScriptDlgPageOpen;
ScriptDlgPageProcessCustom  = function ScriptDlgPageProcessCustom(): Boolean;
ScriptDlgPageSetCaption     = procedure ScriptDlgPageSetCaption(const Caption: String);
ScriptDlgPageSetSubCaption1 = procedure ScriptDlgPageSetSubCaption1(const SubCaption1: String);
ScriptDlgPageSetSubCaption2 = procedure ScriptDlgPageSetSubCaption2(const SubCaption2: String);
ScriptDlgPageShowBackButton = procedure ScriptDlgPageShowBackButton(const Show: Boolean);
SendBroadcastMessage        = function SendBroadcastMessage(const Msg, WParam, LParam: Longint): Longint;
SendBroadcastNotifyMessage  = function SendBroadcastNotifyMessage(const Msg, WParam, LParam: Longint): Boolean;
SendMessage                 = function SendMessage(const Wnd, Msg, WParam, LParam: Longint): Longint;
SendNotifyMessage           = function SendNotifyMessage(const Wnd, Msg, WParam, LParam: Longint): Boolean;
SetArrayLength              = procedure SetArrayLength(var Arr: Array; I: Longint);
SetCurrentDir               = function SetCurrentDir(const Dir: string): Boolean;
SetIniBool                  = function SetIniBool(const Section, Key: String; const Value: Boolean; const Filename: String): Boolean;
SetIniInt                   = function SetIniInt(const Section, Key: String; const Value: Longint; const Filename: String): Boolean;
SetIniString                = function SetIniString(const Section, Key, Value, Filename: String): Boolean;
SetLength                   = procedure SetLength(var S: String; L: Longint);
SetPreviousData             = function SetPreviousData(const PreviousDataKey: Integer; const ValueName, ValueData: String): Boolean;
SetupMessage                = function SetupMessage(const ID: TSetupMessageID): String;
ShouldProcessEntry          = function ShouldProcessEntry(const Components, Tasks: String): TShouldProcessEntryResult;
Sleep                       = procedure Sleep(const Milliseconds: LongInt);
StrGet                      = function StrGet(S: String; I: Integer): Char;
StringChange                = procedure StringChange(var S: String; const FromStr, ToStr: String);
StringOfChar                = function StringOfChar(c: Char; I : Longint): String;
StrSet                      = function StrSet(c: Char; I: Integer; var s: String): Char;
StrToInt                    = function StrToInt(s: string): Longint;
StrToIntDef                 = function StrToIntDef(s: string; def: Longint): Longint;
SysErrorMessage             = function SysErrorMessage(ErrorCode: Integer): String;
Terminated                  = function Terminated: Boolean;
Trim                        = function Trim(const S: string): String;
TrimLeft                    = function TrimLeft(const S: string): String;
TrimRight                   = function TrimRight(const S: string): String;
UnregisterFont              = procedure UnregisterFont(const FontName, FontFilename: String);
UnregisterServer            = function UnregisterServer(const Filename: String; const FailCriticalErrors: Boolean): Boolean;
UnregisterTypeLibrary       = function UnregisterTypeLibrary(const Filename: String): Boolean
Uppercase                   = function Uppercase(s: string): String;
UsingWinNT                  = function UsingWinNT: Boolean;
WizardDirValue              = function WizardDirValue: String;
WizardGroupValue            = function WizardGroupValue: String;
WizardNoIcons               = function WizardNoIcons: Boolean;
WizardSelectedComponents    = function WizardSelectedComponents(const Descriptions: Boolean): String;
WizardSelectedTasks         = function WizardSelectedTasks(const Descriptions: Boolean): String;
WizardSetupType             = function WizardSetupType(const Description: Boolean): String;
WizardSilent                = function WizardSilent: Boolean;
